
import selenium
from selenium import webdriver
import mysql.connector




anonymizablelocal = ['(0008, 0050)', '(0018, 4000)', '(0040, 0555)', '(0008, 0022)', 
        '(0008, 002A)', '(0018, 1400)', '(0018, 11BB)', '(0018, 9424)', '(0008, 0032)', 
        '(0040, 4035)', '(0010, 21B0)', '', '(0038, 0010)', '(0038, 0020)', '(0008, 1084)', 
        '(0008, 1080)', '(0038, 0021)', '(0000, 1000)', '(0010, 2110)', '(006A, 0006)', 
        '(006A, 0005)', '(006A, 0003)', '(0044, 0004)', '(4000, 0010)', '(0044, 0104)', 
        '(0044, 0105)', '(0400, 0562)', '(0040, A078)', '(2200, 0005)', '(300A, 00C3)',
        '(300A, 00DD)', '(0010, 1081)', '(0016, 004D)', '(0018, 1007)', '(0400, 0310)',
        '(0012, 0060)', '(0012, 0082)', '(0012, 0081)', '(0012, 0020)', '(0012, 0021)',
        '(0012, 0072)', '(0012, 0071)', '(0012, 0030)', '(0012, 0031)', '(0012, 0010)',
        '(0012, 0040)', '(0012, 0042)', '(0012, 0051)', '(0012, 0050)', '(0040, 0310)',
        '(0040, 0280)', '(300A, 02EB)', '(0020, 9161)', '(3010, 000F)', '(3010, 0017)',
        '(3010, 0006)', '(0040, 3001)', '(3010, 0013)', '(0008, 009C)', '(0008, 009D)',
        '(0050, 001B)', '(0040, 051A)', '(0040, 0512)', '(0070, 0086)', '(0070, 0084)',
        '(0008, 0023)', '(0040, A730)', '(0008, 0033)', '(0008, 0107)', '(0008, 0106)', 
        '(0018, 0010)', '(0018, 1042)', '(0018, 1043)', '(0018, A002)', '(0018, A003)', 
        '(0010, 2150)', '(2100, 0040)', '(2100, 0050)', '', '(0038, 0300)', '(50xx, xxxx)', 
        '(0008, 0025)', '(0008, 0035)', '(0040, A07C)', '(FFFC, FFFC)', '(0040, A121)', '', 
        '(0018, 1200)', '(0018, 700C)', '(0018, 1012)', '(0040, A120)', '(0018, 1202)', '(0018, 9701)', 
        '(0018, 937F)', '(0008, 2111)', '(0018, 700A)', '(3010, 001B)', '(0050, 0020)', '(3010, 002D)', 
        '(0018, 1000)', '(0016, 004B)', '(0018, 1002)', '(0400, 0105)', '(FFFA, FFFA)', '(0400, 0100)', 
        '(0020, 9164)', '(0038, 0030)', '(0038, 0040)', '(0038, 0032)', '(300A, 079A)', '(4008, 011A)', 
        '(4008, 0119)', '(300A, 0016)', '(300A, 0013)', '(3010, 006E)', '(0068, 6226)', '(0018, 9517)', 
        '(3010, 0037)', '(3010, 0035)', '(3010, 0038)', '(3010, 0036)', '(300A, 0676)', '(0012, 0087)', 
        '(0012, 0086)', '(0010, 2160)', '(0018, 9804)', '(0040, 4011)', '(0008, 0058)', '(0070, 031A)', 
        '(0040, 2017)', '', '', '(3008, 0054)', '(300A, 0196)', '(0034, 0002)', '(0034, 0001)', 
        '(3010, 007F)', '(300A, 0072)', '(0018, 9074)', '(0020, 9158)', '(0020, 0052)', '(0034, 0007)',
        '(0018, 9151)', '(0018, 9623)', '(0018, 1008)', '(0018, 1005)', '(0016, 0076)', '(0016, 0075)', 
        '(0016, 008C)', '(0016, 008D)', '(0016, 0088)', '(0016, 0087)', '(0016, 008A)', '(0016, 0089)', 
        '(0016, 0084)', '(0016, 0083)', '(0016, 0086)', '(0016, 0085)', '(0016, 008E)', '(0016, 007B)', 
        '(0016, 0081)', '(0016, 0080)', '(0016, 0072)', '(0016, 0071)', '(0016, 0074)', '(0016, 0073)', 
        '(0016, 0082)', '(0016, 007A)', '(0016, 008B)', '(0016, 0078)', '(0016, 007D)', '(0016, 007C)', 
        '(0016, 0079)', '(0016, 0077)', '(0016, 007F)', '(0016, 007E)', '(0016, 0070)', '(0070, 0001)', 
        '(0072, 000A)', '(0040, E004)', '(0040, 4037)', '(0040, 4036)', '(see Note 1', '(0008, 4000)', 
        '(0020, 4000)', '(0028, 4000)', '(0040, 2400)', '(003A, 0314)', '(4008, 0300)', '(0068, 6270)', 
        '(0008, 0015)', '(0008, 0012)', '(0008, 0013)', '(0008, 0014)', '(0400, 0600)', '(0008, 0081)', 
        '(0008, 1040)', '(0008, 1041)', '(0008, 0082)', '(0008, 0080)', '(0018, 9919)', '(0010, 1050)', 
        '(3010, 0085)', '(3010, 004D)', '(3010, 004C)', '(0040, 1011)', '(300A, 0741)', '(300A, 0742)', 
        '(300A, 0783)', '(4008, 0112)', '(4008, 0113)', '(4008, 0111)', '(4008, 010C)', '(4008, 0115)', 
        '(4008, 0200)', '(4008, 0202)', '(4008, 0100)', '(4008, 0101)', '(4008, 0102)', '(4008, 010B)', 
        '(4008, 010A)', '(4008, 0108)', '(4008, 0109)', '(0018, 0035)', '(0018, 0027)', '(0008, 3010)',
        '(0040, 2004)', '(0038, 0011)', '(0038, 0014)', '(0010, 0021)', '(0038, 0061)', '(0038, 0064)', 
        '(0040, 0513)', '(0040, 0562)', '(0040, 2005)', '(2200, 0002)', '(0028, 1214)', '(0010, 21D0)', 
        '(0016, 004F)', '(0016, 0050)', '(0016, 0051)', '(0016, 004E)', '(0050, 0021)', '(0400, 0404)', 
        '(0016, 002B)', '(0018, 100B)', '(3010, 0043)', '(0002, 0003)', '(0010, 2000)', '(0010, 1090)', 
        '(0010, 1080)', '(0400, 0550)', '(0020, 3403)', '(0020, 3406)', '(0020, 3405)', '(0020, 3401)', 
        '(0400, 0563)', '(3008, 0056)', '(0018, 937B)', '(003A, 0310)', '(s) Reading', '(0040, 1010)', 
        '(0400, 0552)', '(0400, 0551)', '', '(0040, A032)', '(0040, A033)', '', '', '(0040, A171)', 
        '(0010, 2180)', '(0008, 1072)', '(0008, 1070)', '(0040, 2010)', '(0040, 2011)', '(0040, 2008)', 
        '(0040, 2009)', '(0400, 0561)', '(0010, 1000)', '(0010, 1002)', '(0010, 1001)', '(60xx, 4000)', 
        '(60xx, 3000)', '(0008, 0024)', '(0008, 0034)', '(300A, 0760)', '(0028, 1199)', '(0040, A07A)', 
        '(0040, A082)', '(0010, 1040)', '(0010, 1010)', '(0010, 0030)', '(0010, 1005)', '(0010, 0032)', 
        '(0038, 0400)', '(0010, 0050)', '(0010, 1060)', '(0010, 0010)', '(0010, 0101)', '(0010, 0102)',
        '(0010, 21F0)', '(0010, 0040)', '(0010, 2203)', '(0010, 1020)', '(0010, 2155)', '(0010, 2154)', 
        '(0010, 1030)', '(0010, 4000)', '(0010, 0020)', '(300A, 0794)', '(300A, 0650)', '(0038, 0500)', 
        '(0040, 1004)', '(300A, 0792)', '(300A, 078E)', '(0040, 0243)', '(0040, 0254)', '(0040, 0250)', 
        '(0040, 4051)', '(0040, 0251)', '(0040, 0253)', '(0040, 0244)', '(0040, 4050)', '(0040, 0245)', 
        '(0040, 0241)', '(0040, 4030)', '(0040, 0242)', '(0040, 4028)', '(0008, 1050)', '(0008, 1052)', 
        '(0040, 1102)', '(0040, 1104)', '(0040, 1103)', '(0040, 1101)', '(0040, A123)', '(s) of Reco', 
        '(s) of Reco', '(s) Reading', '(4008, 0114)', '(0040, 2016)', '(0018, 1004)', '(0010, 21C0)',
            '(0040, 0012)', '(300A, 000E)', '(3010, 007B)', '(3010, 0081)', '(0070, 0082)', '(0070, 0083)', 
            '(0070, 1101)', '(0070, 1102)', '(3010, 0061)', '(gggg, eeee)', '(0040, 4052)', '(0044, 000B)', 
            '(0018, 1030)', '(300A, 0619)', '(300A, 0623)', '(300A, 067D)', '(300A, 067C)', '(0018, 1078)', 
            '(0018, 1072)', '(0018, 1079)', '(0018, 1073)', '(300C, 0113)', '(0040, 100A)', '(0032, 1030)', 
            '(3010, 005C)', '(0400, 0565)', '(0040, 2001)', '(0040, 1002)', '(0032, 1066)', '(0032, 1067)', 
            '(300A, 073A)', '(3010, 000B)', '(0040, A13A)', '(0400, 0402)', '(300A, 0083)', '(3010, 006F)', 
            '(3010, 0031)', '(3006, 0024)', '(0040, 4023)', '(0008, 1140)', '', '(0038, 0004)', '(0010, 1100)', 
            '(0008, 1120)', '(0008, 1111)', '(0400, 0403)', '(0008, 1155)', '(0004, 1511)', '(0008, 1110)', 
            '(300A, 0785)', '(0008, 0092)', '(0008, 0090)', '(0008, 0094)', '(0008, 0096)', '(0010, 2152)', 
            '(3006, 00C2)', '(0040, 0275)', '(0032, 1070)', '(0040, 1400)', '(0032, 1060)', '(0040, 1001)', 
            '(0040, 1005)', '(0018, 9937)', '(0000, 1001)', '(0032, 1032)', '(0032, 1033)', '(0018, 9185)', 
            '(0010, 2299)', '(0010, 2297)', '(4008, 4000)', '(4008, 0118)', '(4008, 0040)', '(4008, 0042)', 
            '(300E, 0004)', '(300E, 0008)', '(300E, 0005)', '(3006, 0028)', '(3006, 0038)', '(3006, 00A6)', 
            '(3006, 0026)', '(3006, 0088)', '(3006, 0085)', '(300A, 0615)', '(300A, 0611)', '(3010, 005A)', 
            '(300A, 0006)', '(300A, 0004)', '(300A, 0002)', '(300A, 0003)', '(300A, 0007)', '(3010, 0054)', 
            '(300A, 062A)', '(3010, 0056)', '(3010, 003B)', '(3008, 0162)', '(3008, 0164)', '(3008, 0166)', 
            '(3008, 0168)', '(0038, 001A)', '(0038, 001B)', '(0038, 001C)', '(0038, 001D)', '(0040, 4034)', 
            '(0038, 001E)', '(0040, 0006)', '(0040, 000B)', '(0040, 0007)', '(0040, 0004)', '(0040, 0005)', 
            '(0040, 4008)', '(0040, 0009)', '(0040, 0011)', '(0040, 4010)', '(0040, 0002)', '(0040, 4005)', 
            '(0040, 0003)', '(0040, 0001)', '(0040, 4027)', '(0040, 0010)', '(0040, 4025)', '(0032, 1020)', 
            '(0032, 1021)', '(0032, 1000)', '(0032, 1001)', '(0032, 1010)', '(0032, 1011)', '(0072, 005F)', 
            '(0072, 0061)', '(0072, 0063)', '(0072, 0066)', '(0072, 0068)', '(0072, 0065)', '(0072, 006A)', 
            '(0072, 006C)', '(0072, 006E)', '(0072, 006B)', '(0072, 006D)', '(0072, 0071)', '(0072, 0070)', 
            '(0008, 0021)', '(0008, 103E)', '(0020, 000E)', '(0008, 0031)', '(0038, 0062)', '(0038, 0060)', 
            '(300A, 01B2)', '(300A, 01A6)', '(0040, 06FA)', '(0010, 21A0)', '(0100, 0420)', '(0008, 0018)', 
            '(3010, 0015)', '(0018, 936A)', '(0034, 0005)', '(0008, 2112)', '(300A, 0216)', '(0400, 0564)', 
            '(3008, 0105)', '(0018, 9369)', '(300A, 022C)', '(300A, 022E)', '(0038, 0050)', '(0040, 050A)', 
            '(0040, 0602)', '(0040, 0551)', '(0040, 0610)', '(0040, 0600)', '(0040, 0554)', '(0018, 9516)', 
            '(0008, 1010)', '(0088, 0140)', '(3006, 0008)', '(3006, 0006)', '(3006, 0002)', '(3006, 0004)', 
            '(3006, 0009)', '(0032, 1040)', '(0032, 1041)', '(0032, 4000)', '(0032, 1050)', '(0032, 1051)', 
            '(0008, 0020)', '(0008, 1030)', '(0020, 0010)', '(0032, 0012)', '(0020, 000D)', '(0032, 0034)', 
            '(0032, 0035)', '(0008, 0030)', '(0032, 0032)', '(0032, 0033)', '(0044, 0010)', '(0020, 0200)', 
            '(0018, 2042)', '', '(0040, DB0D)', '(0040, DB0C)', '(0040, DB07)', '(0040, DB06)', '(4000, 4000)',
            '(2030, 0020)', '(0040, A122)', '', '(0018, 1201)', '(0018, 700E)', '(0018, 1014)', '(0008, 0201)',
            '(0088, 0910)', '(0088, 0912)', '(0088, 0906)', '(0088, 0904)', '(0062, 0021)', '(0008, 1195)', 
            '(0018, 5011)', '(3008, 0024)', '(3008, 0025)', '(3008, 0250)', '(300A, 00B2)', '(300A, 0608)', 
            '(300A, 0609)', '(300A, 0700)', '(3010, 0077)', '(3010, 007A)', '(3008, 0251)', '(300A, 0736)',
            '(300A, 0734)', '(0018, 100A)', '(0040, A124)', '(0018, 1009)', '(3010, 0033)', '(3010, 0034)',
                '', '', '(0040, A030)', '(0040, A088)', '(0040, A075)', '(0040, A073)', '(0040, A027)', 
                '(0038, 4000)', '(0018, 9371)', '(0018, 9373)', '(0018, 9367)', '(0018, 9367)']

if __name__ == "__main__":
#     if scrape == True:
#         driver = webdriver.Chrome("/Users/sipebradford/Documents/MyDICOMvisual/chromedriver")
#         driver.get("https://dicom.nema.org/medical/dicom/current/output/html/part15.html#chapter_E")
#         global anonymizable
#         anonymizable = []
#         errorflag = False
#         i = 0
#         while errorflag == False:
#             i = i+1
#             try:
#                 print(i)
#                 elem = driver.find_element_by_xpath('/html/body/div/div[18]/div[3]/div[4]/div[5]/div/table/tbody/tr[' + str(i) + ']')

#                 #DELETE ME
#                 # if i == 100:
#                 #     errorflag = True
#     #==========================
#             except Exception as e:
#                 print(e)
#                 errorflag = True
#             for index, letter in enumerate(elem.text):
#                 new_string = ""
#                 if letter == "(":
#                     if elem.text[index + 1] != 'T':
#                         for j in range(0, 11):
                            
#                             new_string = new_string + elem.text[index + j]
#                             if elem.text[index + j] == ",":
#                                 new_string = new_string + " "
#                     break
#             anonymizable.append(new_string)
#             print(new_string)
#         print(anonymizable)
# #     print(len(anonymizable))
#     else:

       

        mydb = mysql.connector.connect(
            host = "baj0wmaueyj0r1ai4hie-mysql.services.clever-cloud.com",
            user = 'u1bj6ps5f4rfhhvf',
            passwd = '1t1579wmsPVttIcgoJZR',
            database = 'baj0wmaueyj0r1ai4hie')

        mycursor = mydb.cursor()
        mycursor.execute("DELETE FROM anonymizabletags")
        mydb.commit()
        for taganon in anonymizablelocal:
            print(taganon)
            sql = "INSERT INTO anonymizabletags (tag) VALUES (%s)"
            val = taganon
            mycursor.execute(sql, (val,))
        mydb.commit()
